#!/usr/bin/env bash
#
# Author: Cory Hutchison
#
# Symlinks all *.symlink files to the home directory with a special case for the nvim folder which is symlinked to
# the $HOME/.config directory.
#
# NOTE: Most of this file was taken from a Gist at some point and I've lost track of the original author. Majority of
# attribution goes out to them, whoever they are. 

set -e

DOTFILES_ROOT="$(pwd)"

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]] ; then DIR="$PWD" ; fi
# shellcheck source=script/misc
. "script/misc"

__info "symlinking dotfiles..."

link_files () {
  ln -s "$1" "$2"
  __success_message "linked $1 to $2"
}

install_dotfiles () {
  # Make config folder for nvim
  [ -d "$HOME/.config" ] || mkdir "$HOME/.config"

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in $(find "$DOTFILES_ROOT" -maxdepth 2 -name \*.symlink)
  do
    case "${source%.*}" in
      *"nvim"* )
        dest="$HOME/.config/$(basename "${source%.*}")" ;;
      * )
        dest="$HOME/.$(basename "${source%.*}")" ;;
    esac

    if [ -f "$dest" ] || [ -d "$dest" ]
    then
      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        __error_message "File already exists: $(basename "$source"), what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -r -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf "$dest"
        __warning_message "removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv "$dest" "$dest\.backup"
        __warning_message "moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_files "$source" "$dest"
      else
        __warning_message "skipped $source"
      fi

    else
      link_files "$source" "$dest"
    fi

  done
}

install_dotfiles
